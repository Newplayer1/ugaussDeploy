{"version":3,"sources":["views/bigPicture/BlocData.js","views/devices/viewDevice.js"],"names":["BlocData","label","unit","data","value","InputProps","readOnly","inputProps","min","style","textAlign","variant","defaults","animation","dataPuissance","labels","datasets","fill","backgroundColor","borderColor","dataVoltage","dataCurrent","optionsPuissance","plugins","legend","display","title","text","scales","y","align","x","optionsVoltage","optionsCurrent","DEVICES","PanneauSolaire","batterie","onduleur","mppt","chargeur","sortie1","sortie2","ViewDevice","useEffect","readings","useSelector","state","padding","position","right","top","zIndex","window","location","href","split","values","Power","height","options","maxWidth","Voltage","Current"],"mappings":"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","file":"static/js/14.3aae04fc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst BlocData = ({ label, unit, data }) => {\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      value={data + \" \" + unit}\r\n      InputProps={{\r\n        readOnly: true,\r\n      }}\r\n      inputProps={{\r\n        min: 0,\r\n        style: { textAlign: \"right\" },\r\n      }}\r\n      variant=\"outlined\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default BlocData;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect } from \"react\";\r\nimport BlocData from \"../bigPicture/BlocData\";\r\nimport { Line, defaults } from \"react-chartjs-2\";\r\nimport { setupData } from \"../../utils/setupDonnees\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\ndefaults.animation = false;\r\nconst dataPuissance = {\r\n  labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"],\r\n  datasets: [\r\n    {\r\n      label: \"Puissance\",\r\n      data: [12, 19, 3, 5, 2, 3, 2, 3, 5, 3],\r\n      fill: false,\r\n      backgroundColor: \"rgb(30, 120, 60, 0.5)\",\r\n      borderColor: \"rgba(30, 120, 60, 0.5)\",\r\n    },\r\n  ],\r\n};\r\nconst dataVoltage = {\r\n  labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"5\", \"6\", \"5\", \"6\"],\r\n  datasets: [\r\n    {\r\n      label: \"Voltage\",\r\n      data: [12, 19, 3, 5, 2, 3, 2, 3, 5, 3],\r\n      fill: false,\r\n      backgroundColor: \"rgb(30, 120, 60, 0.5)\",\r\n      borderColor: \"rgba(30, 120, 60, 0.5)\",\r\n    },\r\n  ],\r\n};\r\nconst dataCurrent = {\r\n  labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"5\", \"6\", \"5\", \"6\"],\r\n  datasets: [\r\n    {\r\n      label: \"Courant\",\r\n      data: [12, 19, 3, 5, 2, 3, 2, 3, 5, 3],\r\n      fill: false,\r\n      backgroundColor: \"rgb(30, 120, 60, 0.5)\",\r\n      borderColor: \"rgba(30, 120, 60, 0.5)\",\r\n    },\r\n  ],\r\n};\r\nconst optionsPuissance = {\r\n  plugins: {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: \"Puissance\",\r\n    },\r\n  },\r\n  scales: {\r\n    y: {\r\n      title: {\r\n        display: true,\r\n        text: \"Watt\",\r\n        align: \"end\",\r\n      },\r\n    },\r\n    x: {\r\n      title: {\r\n        display: true,\r\n        text: \"temps\",\r\n        align: \"end\",\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst optionsVoltage = {\r\n  plugins: {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: \"Voltage\",\r\n    },\r\n  },\r\n  scales: {\r\n    y: {\r\n      title: {\r\n        display: true,\r\n        text: \"Volt\",\r\n        align: \"end\",\r\n      },\r\n    },\r\n    x: {\r\n      title: {\r\n        display: true,\r\n        text: \"temps\",\r\n        align: \"end\",\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst optionsCurrent = {\r\n  plugins: {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: \"Courant\",\r\n    },\r\n  },\r\n  scales: {\r\n    y: {\r\n      title: {\r\n        display: true,\r\n        text: \"AmpÃ¨re\",\r\n        align: \"end\",\r\n      },\r\n    },\r\n    x: {\r\n      title: {\r\n        display: true,\r\n        text: \"temps\",\r\n        align: \"end\",\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst DEVICES = {\r\n  // A VALIDER\r\n  PanneauSolaire: 1,\r\n  batterie: 2,\r\n  onduleur: 3,\r\n  mppt: 4,\r\n  chargeur: 6,\r\n  sortie1: 7,\r\n  sortie2: 8,\r\n};\r\nfunction ViewDevice() {\r\n  useEffect(() => {}, [readings]);\r\n  const readings = useSelector((state) => state.readings);\r\n  return (\r\n    <div style={{ padding: \"0px 100px\" }}>\r\n      <CRow>\r\n        <CCol>\r\n          <CRow>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                position: \"absolute\",\r\n                right: \"40px\",\r\n                top: \"60px\",\r\n                zIndex: \"1\",\r\n                backgroundColor: \"rgb(235 237 239)\",\r\n              }}\r\n            >\r\n              <BlocData label=\"Puissance\" unit=\"W\" data={readings && readings[DEVICES[window.location.href.split(\"/#/\")[1]]].values.Power} />\r\n            </div>\r\n            <Line data={dataPuissance} height={90} options={optionsPuissance} />\r\n          </CRow>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol>\r\n          <CRow>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                position: \"absolute\",\r\n                right: \"40px\",\r\n                top: \"60px\",\r\n                zIndex: \"1\",\r\n                backgroundColor: \"rgb(235 237 239)\",\r\n                maxWidth: \"90px\",\r\n              }}\r\n            >\r\n              <BlocData label=\"Voltage \" unit=\"V\" data={readings && readings[DEVICES[window.location.href.split(\"/#/\")[1]]].values.Voltage} />\r\n            </div>\r\n            <Line data={dataVoltage} height={100} options={optionsVoltage} />\r\n          </CRow>\r\n        </CCol>\r\n        <CCol>\r\n          <CRow>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                position: \"absolute\",\r\n                right: \"40px\",\r\n                top: \"60px\",\r\n                zIndex: \"1\",\r\n                backgroundColor: \"rgb(235 237 239)\",\r\n                maxWidth: \"90px\",\r\n              }}\r\n            >\r\n              <BlocData label=\"Courant\" unit=\"A\" data={readings && readings[DEVICES[window.location.href.split(\"/#/\")[1]]].values.Current} />\r\n            </div>\r\n            <Line data={dataCurrent} height={100} options={optionsCurrent} />\r\n          </CRow>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n}\r\nexport default ViewDevice;\r\n"],"sourceRoot":""}