{"version":3,"sources":["views/bigPicture/BlocData.js","views/bigPicture/BigPicture.js"],"names":["BlocData","label","unit","data","value","InputProps","readOnly","inputProps","min","style","textAlign","variant","Dashboard","readings","useSelector","state","utils","DateFnsUtils","ampm","openTo","views","format","Date","timestamp","disabled","class","values","Power","SoC"],"mappings":"mGAAA,6BAoBeA,IAjBE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC/B,OACE,kBAAC,IAAD,CACEF,MAAOA,EACPG,MAAOD,EAAO,IAAMD,EACpBG,WAAY,CACVC,UAAU,GAEZC,WAAY,CACVC,IAAK,EACLC,MAAO,CAAEC,UAAW,UAEtBC,QAAQ,e,0HCwDCC,UAtDG,SAAC,GAAQ,eACzB,IAAMC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMF,YAO9C,OACI,8BACE,wDACA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAyBG,MAAOC,KAC9B,kBAAC,IAAD,CACEC,MAAM,EACNC,OAAO,QACPC,MAAO,CAAC,QAAS,UAAW,WAC5BC,OAAO,WACPpB,MAAM,SACNG,MAAOS,EAAWS,KAAKT,EAASU,WAAa,KAC7CC,UAAQ,OAIlB,kBAAC,IAAD,KACE,yBAAKC,MAAM,QACT,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUxB,MAAO,qBAAsBE,KAAMU,GAAYA,EAAS,GAAGa,OAAOC,MAAOzB,KAAM,QAG7F,yBAAKuB,MAAM,SACT,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUxB,MAAO,qBAAsBE,KAAMU,GAAYA,EAAS,GAAGa,OAAOC,MAAOzB,KAAM,SAI/F,kBAAC,IAAD,KACE,yBAAKuB,MAAM,QACT,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAUxB,MAAO,uBAAwBE,KAAMU,GAAYA,EAAS,GAAGa,OAAOE,IAAK1B,KAAM,QAG3F,yBAAKuB,MAAM,SACT,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAUxB,MAAO,4BAA6BE,KAAMU,GAAYA,EAAS,GAAGa,OAAOC,MAAOzB,KAAM","file":"static/js/14.67c55c01.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst BlocData = ({ label, unit, data }) => {\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      value={data + \" \" + unit}\r\n      InputProps={{\r\n        readOnly: true,\r\n      }}\r\n      inputProps={{\r\n        min: 0,\r\n        style: { textAlign: \"right\" },\r\n      }}\r\n      variant=\"outlined\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default BlocData;\r\n","import React, { lazy, Component } from \"react\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { useSelector } from \"react-redux\";\r\nimport BlocData from \"./BlocData\";\r\nconst DEVICES = {\r\n  1: \"Panneau Solaire\",\r\n  2: \"Batterie\",\r\n  3: \"Onduleur\",\r\n  4: \"Contrôleur de charge\",\r\n  5: \"Selecteur de source\",\r\n  6: \"Chargeur\",\r\n  7: \"Sortie AC #1\",\r\n  8: \"Sortie AC #2\",\r\n};\r\n\r\nconst Dashboard = ({}) => {\r\n  const readings = useSelector((state) => state.readings);\r\n  const listView = [\r\n    { label: \"Puissance Sortie 1\", unit: \"W\", data: 1 },\r\n    { label: \"Puissance Sortie 2\", unit: \"W\", data: 1 },\r\n    { label: \"Pourcentage Batterie\", unit: \"%\", data: 1 },\r\n    { label: \"Puissance Panneau Solaire\", unit: \"W\", data: 1 },\r\n  ];\r\n  return (\r\n      <body>\r\n        <h2>Données du système</h2>\r\n        <CRow>\r\n            <CCol>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <TimePicker\r\n                  ampm={false}\r\n                  openTo=\"hours\"\r\n                  views={[\"hours\", \"minutes\", \"seconds\"]}\r\n                  format=\"HH:mm:ss\"\r\n                  label=\"Update\"\r\n                  value={readings ? Date(readings.timestamp) : null}\r\n                  disabled />\r\n              </MuiPickersUtilsProvider>\r\n            </CCol>\r\n        </CRow>\r\n        <CRow>\r\n          <div class=\"left\">\r\n            <CCol>\r\n              <BlocData label={\"Puissance sortie 1\"} data={readings && readings[7].values.Power} unit={\"W\"} />\r\n            </CCol>\r\n          </div>\r\n          <div class=\"right\">\r\n            <CCol >\r\n              <BlocData label={\"Puissance sortie 2\"} data={readings && readings[8].values.Power} unit={\"W\"} />\r\n            </CCol>\r\n          </div>\r\n        </CRow>\r\n        <CRow>\r\n          <div class=\"left\">\r\n            <CCol >\r\n            <BlocData label={\"Pourcentage Batterie\"} data={readings && readings[2].values.SoC} unit={\"%\"} />\r\n            </CCol>\r\n          </div>\r\n          <div class=\"right\">\r\n            <CCol>\r\n            <BlocData label={\"Puissance Panneau Solaire\"} data={readings && readings[1].values.Power} unit={\"W\"} />\r\n            </CCol>\r\n          </div>\r\n        </CRow>\r\n\r\n</body>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}