{"version":3,"sources":["views/bigPicture/BlocData.js","views/devices/viewDevice.js","utils/setupDonnees.js"],"names":["BlocData","label","unit","data","value","InputProps","readOnly","inputProps","min","style","textAlign","variant","data2","labels","datasets","fill","backgroundColor","borderColor","DEVICES","PanneauSolaire","batterie","onduleur","mppt","chargeur","sortie1","sortie2","ViewDevice","useEffect","readings","dataSetup","map","reading","values","Device_ID","Power","Courant","Voltage","setupData","useSelector","state","console","log","padding","window","location","href","split","Current"],"mappings":"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","file":"static/js/14.df2169af.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst BlocData = ({ label, unit, data }) => {\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      value={data + \" \" + unit}\r\n      InputProps={{\r\n        readOnly: true,\r\n      }}\r\n      inputProps={{\r\n        min: 0,\r\n        style: { textAlign: \"right\" },\r\n      }}\r\n      variant=\"outlined\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default BlocData;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect } from \"react\";\r\nimport BlocData from \"../bigPicture/BlocData\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { setupData } from \"../../utils/setupDonnees\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst data2 = {\r\n  labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\r\n  datasets: [\r\n    {\r\n      label: \"# of Votes\",\r\n      data: [12, 19, 3, 5, 2, 3],\r\n      fill: false,\r\n      backgroundColor: \"rgb(255, 99, 132)\",\r\n      borderColor: \"rgba(0, 0, 0, 0.2)\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst DEVICES = {\r\n  // A VALIDER\r\n  PanneauSolaire: 1,\r\n  batterie: 2,\r\n  onduleur: 3,\r\n  mppt: 4,\r\n  chargeur: 6,\r\n  sortie1: 7,\r\n  sortie2: 8,\r\n};\r\nfunction ViewDevice() {\r\n  var dataSetup;\r\n  useEffect(() => {\r\n    dataSetup = readings && setupData(readings);\r\n  }, [readings]);\r\n  const readings = useSelector((state) => state.readings);\r\n  console.log(readings);\r\n  return (\r\n    <div style={{ padding: \"10px 100px\" }}>\r\n      <CRow>\r\n        <CCol>\r\n          <CRow>\r\n            <BlocData label=\"Puissance Actuel\" unit=\"W\" data={readings && readings[DEVICES[window.location.href.split(\"/#/\")[1]]].values.Power} />\r\n          </CRow>\r\n          <CRow>\r\n            <CCol>\r\n              <Line data={data2} />\r\n            </CCol>\r\n          </CRow>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol>\r\n          <CRow>\r\n            <BlocData label=\"Voltage Actuel\" unit=\"V\" data={readings && readings[DEVICES[window.location.href.split(\"/#/\")[1]]].values.Voltage} />\r\n          </CRow>\r\n          <CRow>\r\n            <Line data={data2} />\r\n          </CRow>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol>\r\n          <CRow>\r\n            <BlocData label=\"Courant Actuel\" unit=\"A\" data={readings && readings[DEVICES[window.location.href.split(\"/#/\")[1]]].values.Current} />\r\n          </CRow>\r\n          <CRow>\r\n            <Line data={data2} />\r\n          </CRow>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n}\r\nexport default ViewDevice;\r\n","const DEVICES = {\r\n  1: \"Panneau Solaire\",\r\n  2: \"Batterie\",\r\n  3: \"Onduleur\",\r\n  4: \"ContrÃ´leur de charge\",\r\n  5: \"Selecteur de source\",\r\n  6: \"Chargeur\",\r\n  7: \"Sortie AC #1\",\r\n  8: \"Sortie AC #2\",\r\n};\r\n\r\nexport const setupData = (readings) => {\r\n  var dataSetup = {\r\n    PanneauSolaire: {},\r\n    batterie: {},\r\n    mppt: {},\r\n    chargeur: {},\r\n    onduleur: {},\r\n    sortie1: {},\r\n    sortie2: {},\r\n  };\r\n  readings.map((reading) => {\r\n    if (reading.values.Device_ID === 1) {\r\n      // panneau solaire\r\n      dataSetup[\"PanneauSolaire\"][\"puissance\"] = reading.values.Power;\r\n      dataSetup[\"PanneauSolaire\"][\"courant\"] = reading.values.Courant;\r\n      dataSetup[\"PanneauSolaire\"][\"voltage\"] = reading.values.Voltage;\r\n    }\r\n    if (reading.values.Device_ID === 2) {\r\n      // batterie\r\n      dataSetup[\"batterie\"][\"puissance\"] = reading.values.Power;\r\n      dataSetup[\"batterie\"][\"courant\"] = reading.values.Courant;\r\n      dataSetup[\"batterie\"][\"voltage\"] = reading.values.Voltage;\r\n    }\r\n    if (reading.values.Device_ID === 3) {\r\n      // onduleur\r\n      dataSetup[\"onduleur\"][\"puissance\"] = reading.values.Power;\r\n      dataSetup[\"onduleur\"][\"courant\"] = reading.values.Courant;\r\n      dataSetup[\"onduleur\"][\"voltage\"] = reading.values.Voltage;\r\n    }\r\n    /*if (reading.values.Device_ID === 4) {\r\n      // controlleur de charge\r\n      dataSetup[\"controlleurDeCharge\"][\"puissance\"] = reading.values.Power;\r\n      dataSetup[\"controlleurDeCharge\"][\"courant\"] = reading.values.Courant;\r\n      dataSetup[\"controlleurDeCharge\"][\"voltage\"] = reading.values.Voltage;\r\n    }\r\n    if (reading.values.Device_ID === 5) {\r\n      // selecteurDeSource\r\n      dataSetup[\"selecteurDeSource\"][\"puissance\"] = reading.values.Power;\r\n      dataSetup[\"selecteurDeSource\"][\"courant\"] = reading.values.Courant;\r\n      dataSetup[\"selecteurDeSource\"][\"voltage\"] = reading.values.Voltage;\r\n    }*/\r\n    if (reading.values.Device_ID === 6) {\r\n      // chargeur\r\n      dataSetup[\"chargeur\"][\"puissance\"] = reading.values.Power;\r\n      dataSetup[\"chargeur\"][\"courant\"] = reading.values.Courant;\r\n      dataSetup[\"chargeur\"][\"voltage\"] = reading.values.Voltage;\r\n    }\r\n    if (reading.values.Device_ID === 7) {\r\n      // sortie   1\r\n      dataSetup[\"sortie1\"][\"puissance\"] = reading.values.Power;\r\n      dataSetup[\"sortie1\"][\"courant\"] = reading.values.Courant;\r\n      dataSetup[\"sortie1\"][\"voltage\"] = reading.values.Voltage;\r\n    }\r\n    if (reading.values.Device_ID === 8) {\r\n      // sortie   2\r\n      dataSetup[\"sortie2\"][\"puissance\"] = reading.values.Power;\r\n      dataSetup[\"sortie2\"][\"courant\"] = reading.values.Courant;\r\n      dataSetup[\"sortie2\"][\"voltage\"] = reading.values.Voltage;\r\n    }\r\n  });\r\n  return dataSetup;\r\n};\r\n"],"sourceRoot":""}