{"version":3,"sources":["views/bigPicture/BlocData.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError.js","views/devices/ApexChart.js"],"names":["BlocData","label","unit","data","value","InputProps","readOnly","inputProps","min","style","textAlign","variant","_readOnlyError","name","Error","ApexChart","SocBattery","p_load","useSelector","state","console","log","p_solar_panel","battery_SoC","p_mppt","p_battery","p_inv","p_charger","puissanceSolaire","window","location","href","split","date","Date","puissance","Puissance_sauv","Argent","Batterie","Math","round","padding","class","fields","flow","duration","height","maxValues"],"mappings":"mGAAA,6BAoBeA,IAjBE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC/B,OACE,kBAAC,IAAD,CACEF,MAAOA,EACPG,MAAOD,EAAO,IAAMD,EACpBG,WAAY,CACVC,UAAU,GAEZC,WAAY,CACVC,IAAK,EACLC,MAAO,CAAEC,UAAW,UAEtBC,QAAQ,e,iCCfC,SAASC,EAAeC,GACrC,MAAM,IAAIC,MAAM,IAAOD,EAAO,kB,+EC2HjBE,UArHG,WAChB,IAUIC,EAVEC,EAASC,aAAY,SAACC,GAE1B,OADAC,QAAQC,IAAIF,GACLA,EAAMF,UAETK,EAAgBJ,aAAY,SAACC,GAAD,OAAWA,EAAMG,iBAC7CC,EAAcL,aAAY,SAACC,GAAD,OAAWA,EAAMI,eAC3CC,EAASN,aAAY,SAACC,GAAD,OAAWA,EAAMK,UACtCC,EAAYP,aAAY,SAACC,GAAD,OAAWA,EAAMM,aACzCC,EAAQR,aAAY,SAACC,GAAD,OAAWA,EAAMO,SACrCC,EAAYT,aAAY,SAACC,GAAD,OAAWA,EAAMQ,aAG3CC,EAAmB,EAEvB,OADAZ,EAAaO,EACLM,OAAOC,SAASC,KAAKC,MAAM,OAAO,IACxC,IAAK,iBACHJ,EAAmBN,EACrB,IAAK,WACM,eAATG,EAAYA,EACd,IAAK,WACE,WAALC,EAAQA,EACV,IAAK,OACG,YAANF,EAASA,EACX,IAAK,WACM,eAATG,EAAYA,EACd,IAAK,UACG,YAANV,EAASA,EAGb,IAAId,EAAO,CACT8B,KAAM,IAAIC,KACVN,iBAAuC,IAArBA,EAAyBA,EAAmB,EAC9DO,UAAyC,EACzCnB,WAAyB,IAAbA,EACZoB,eAAgB,KAChBC,OAAQ,GACRC,SAAUC,KAAKC,MAAmB,IAAbxB,GAAsB,IAC3CC,SACAU,YACAD,QACAD,YACAD,UAIF,OACE,oCACE,yBAAKf,MAAO,CAAEgC,QAAS,cACvB,kBAAC,IAAD,KACE,wBAAIC,MAAM,oBAAV,4BACA,kBAAC,IAAD,CAAMjC,MAAO,CAAEgC,QAAS,cACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMhC,MAAO,CAAEgC,QAAS,cACtB,kBAACzC,EAAA,EAAD,CAAUC,MAAM,4BAA4BC,KAAK,IAAIC,KAAMA,EAAKyB,oBAGlE,kBAAC,IAAD,CAAMnB,MAAO,CAAEgC,QAAS,cACtB,kBAACzC,EAAA,EAAD,CAAUC,MAAM,6BAA0BC,KAAK,IAAIC,KAAMoC,KAAKC,MAAwB,IAAlBrC,EAAKa,YAAoB,OAE/F,kBAAC,IAAD,CAAMP,MAAO,CAAEgC,QAAS,cACtB,kBAACzC,EAAA,EAAD,CAAUC,MAAM,iBAAiBC,KAAK,IAAIC,KAAMA,EAAKqB,WAGzD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMf,MAAO,CAAEgC,QAAS,cACtB,kBAACzC,EAAA,EAAD,CAAUC,MAAM,yBAAsBC,KAAK,IAAIC,KAAMA,EAAKc,UAG5D,kBAAC,IAAD,CAAMR,MAAO,CAAEgC,QAAS,cACtB,kBAACzC,EAAA,EAAD,CAAUC,MAAM,qBAAqBC,KAAK,IAAIC,KAAMA,EAAKwB,aAE3D,kBAAC,IAAD,CAAMlB,MAAO,CAAEgC,QAAS,cACtB,kBAACzC,EAAA,EAAD,CAAUC,MAAM,qBAAqBC,KAAK,IAAIC,KAAMA,EAAKuB,YAMjE,kBAAC,IAAD,KACE,wBAAIgB,MAAM,oBAAV,wCACA,kBAAC,IAAD,CAASC,OAAQ,CAAC,YAAaxC,KAAMA,EAAMyC,KArCtC,CAAEC,SAAU,KAqCsCpC,MAAO,CAAEqC,OAAQ,SAAWC,UAAW,MAEhG,wBAAIL,MAAM,oBAAV,6BAEA,kBAAC,IAAD,CAAMjC,MAAO,CAAEgC,QAAS,cACtB,kBAAC,IAAD,KACE,wBAAIC,MAAM,wBAAV,aACA,kBAAC,IAAD,KACE,kBAAC1C,EAAA,EAAD,CAAUC,MAAM,8BAAqBC,KAAK,MAAMC,KAAMA,EAAKiC,kBAE7D,kBAAC,IAAD,KACE,kBAACpC,EAAA,EAAD,CAAUC,MAAM,yBAAmBC,KAAK,IAAIC,KAAMA,EAAKkC,WAG3D,kBAAC,IAAD,KACE,wBAAIK,MAAM,wBAAV,YACA,kBAAC,IAAD,KACE,kBAAC1C,EAAA,EAAD,CAAUC,MAAM,8BAAqBC,KAAK,MAAMC,KAA4B,GAAtBA,EAAKiC,kBAE7D,kBAAC,IAAD,KACE,kBAACpC,EAAA,EAAD,CAAUC,MAAM,yBAAmBC,KAAK,IAAIC,KAAoB,GAAdA,EAAKkC,WAG3D,kBAAC,IAAD,KACE,wBAAIK,MAAM,wBAAV,OACA,kBAAC,IAAD,KACE,kBAAC1C,EAAA,EAAD,CAAUC,MAAM,8BAAqBC,KAAK,MAAMC,KAA4B,GAAtBA,EAAKiC,kBAE7D,kBAAC,IAAD,KACE,kBAACpC,EAAA,EAAD,CAAUC,MAAM,yBAAmBC,KAAK,IAAIC,KAAoB,GAAdA,EAAKkC","file":"static/js/15.e1ad7a3c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst BlocData = ({ label, unit, data }) => {\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      value={data + \" \" + unit}\r\n      InputProps={{\r\n        readOnly: true,\r\n      }}\r\n      inputProps={{\r\n        min: 0,\r\n        style: { textAlign: \"right\" },\r\n      }}\r\n      variant=\"outlined\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default BlocData;\r\n","export default function _readOnlyError(name) {\n  throw new Error(\"\\\"\" + name + \"\\\" is read-only\");\n}","import React, { useEffect, useState, useReducer } from \"react\";\r\nimport RTChart from \"react-rt-chart\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport BlocData from \"../bigPicture/BlocData\";\r\nimport store from \"../../store/store\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ApexChart = () => {\r\n  const p_load = useSelector((state) => {\r\n    console.log(state);\r\n    return state.p_load;\r\n  });\r\n  const p_solar_panel = useSelector((state) => state.p_solar_panel);\r\n  const battery_SoC = useSelector((state) => state.battery_SoC);\r\n  const p_mppt = useSelector((state) => state.p_mppt);\r\n  const p_battery = useSelector((state) => state.p_battery);\r\n  const p_inv = useSelector((state) => state.p_inv);\r\n  const p_charger = useSelector((state) => state.p_charger);\r\n  var SocBattery;\r\n  var puissance = 0;\r\n  var puissanceSolaire = 0;\r\n  SocBattery = battery_SoC;\r\n  switch (window.location.href.split(\"/#/\")[1]) {\r\n    case \"PanneauSolaire\":\r\n      puissanceSolaire = p_solar_panel;\r\n    case \"batterie\":\r\n      p_battery = p_battery;\r\n    case \"onduleur\":\r\n      p_inv = p_inv;\r\n    case \"mppt\":\r\n      p_mppt = p_mppt;\r\n    case \"chargeur\":\r\n      p_charger = p_charger;\r\n    case \"sortie1\":\r\n      p_load = p_load;\r\n    default:\r\n  }\r\n  var data = {\r\n    date: new Date(),\r\n    puissanceSolaire: puissanceSolaire !== 0 ? puissanceSolaire : 0,\r\n    puissance: puissance !== 0 ? puissance : 0,\r\n    SocBattery: SocBattery * 100,\r\n    Puissance_sauv: 43.4,\r\n    Argent: 100 * 0.6,\r\n    Batterie: Math.round(SocBattery * 10000) / 100,\r\n    p_load,\r\n    p_charger,\r\n    p_inv,\r\n    p_battery,\r\n    p_mppt,\r\n  };\r\n  var flow = { duration: 500 };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"10px 0px\" }} />\r\n      <CCol>\r\n        <h1 class=\"sub-title_donnes\">Données temps réel</h1>\r\n        <CRow style={{ padding: \"20px 30px\" }}>\r\n          <CCol>\r\n            <CRow style={{ padding: \"20px 30px\" }}>\r\n              <BlocData label=\"Puissance Panneau Solaire\" unit=\"W\" data={data.puissanceSolaire} />\r\n            </CRow>\r\n\r\n            <CRow style={{ padding: \"20px 30px\" }}>\r\n              <BlocData label=\"État de charge batterie\" unit=\"%\" data={Math.round(data.SocBattery * 100) / 100} />\r\n            </CRow>\r\n            <CRow style={{ padding: \"20px 30px\" }}>\r\n              <BlocData label=\"Puissance MPPT\" unit=\"W\" data={data.p_mppt} />\r\n            </CRow>\r\n          </CCol>\r\n          <CCol>\r\n            <CRow style={{ padding: \"20px 30px\" }}>\r\n              <BlocData label=\"Puissance consommée\" unit=\"W\" data={data.p_load} />\r\n            </CRow>\r\n\r\n            <CRow style={{ padding: \"20px 30px\" }}>\r\n              <BlocData label=\"Puissance chargeur\" unit=\"W\" data={data.p_charger} />\r\n            </CRow>\r\n            <CRow style={{ padding: \"20px 30px\" }}>\r\n              <BlocData label=\"Puissance onduleur\" unit=\"W\" data={data.p_inv} />\r\n            </CRow>\r\n          </CCol>\r\n        </CRow>\r\n      </CCol>\r\n\r\n      <CCol>\r\n        <h1 class=\"sub-title_donnes\">État de charge de la batterie (%)</h1>\r\n        <RTChart fields={[\"Batterie\"]} data={data} flow={flow} style={{ height: \"350px\" }} maxValues={30} />\r\n      </CCol>\r\n      <h1 class=\"sub-title_donnes\">Économie du système</h1>\r\n\r\n      <CRow style={{ padding: \"20px 30px\" }}>\r\n        <CCol>\r\n          <h2 class=\"sub-sub-title_donnes\">Mensuelle</h2>\r\n          <CCol>\r\n            <BlocData label=\"Énergie économisée\" unit=\"kWh\" data={data.Puissance_sauv} />\r\n          </CCol>\r\n          <CCol>\r\n            <BlocData label=\"Argent économisé\" unit=\"$\" data={data.Argent} />\r\n          </CCol>\r\n        </CCol>\r\n        <CCol>\r\n          <h2 class=\"sub-sub-title_donnes\">Annuelle</h2>\r\n          <CCol>\r\n            <BlocData label=\"Énergie économisée\" unit=\"kWh\" data={data.Puissance_sauv * 12} />\r\n          </CCol>\r\n          <CCol>\r\n            <BlocData label=\"Argent économisé\" unit=\"$\" data={data.Argent * 12} />\r\n          </CCol>\r\n        </CCol>\r\n        <CCol>\r\n          <h2 class=\"sub-sub-title_donnes\">Vie</h2>\r\n          <CCol>\r\n            <BlocData label=\"Énergie économisée\" unit=\"kWh\" data={data.Puissance_sauv * 16} />\r\n          </CCol>\r\n          <CCol>\r\n            <BlocData label=\"Argent économisé\" unit=\"$\" data={data.Argent * 16} />\r\n          </CCol>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\nexport default ApexChart;\r\n"],"sourceRoot":""}